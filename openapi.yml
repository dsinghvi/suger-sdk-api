openapi: 3.0.0
info:
  description: CRUD operations on a set of resources, including organizations, products,
    offers, entitlements, usage record groups for meterting, etc.
  title: Suger API
  contact:
    name: Suger API Support
    url: http://www.suger.io
    email: support@suger.io
  version: "1.0"
paths:
  "/org/{orgId}/addEntitlementCredit":
    post:
      description: Add Credit Amount to the given Entitlement. The credit amount is
        accumulated & saved in the current Entitlement Term of the gvien
        Entitlement.
      tags:
        - Entitlement
      summary: Add Credit Amount in Entitlement.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shared.AddEntitlementCreditParams"
        description: RequestBody
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.AddEntitlementCreditResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
  "/org/{orgId}/buyer":
    get:
      tags:
        - Buyer
      summary: List all buyers under the organization
      parameters:
        - description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/shared.IdentityBuyer"
        "500":
          description: ""
  "/org/{orgId}/buyer/{buyerId}":
    get:
      tags:
        - Buyer
      summary: Get the buyer
      parameters:
        - description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Buyer ID
          name: buyerId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.IdentityBuyer"
        "500":
          description: ""
    patch:
      tags:
        - Buyer
      summary: Update the name & description of the buyer
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Buyer ID
          name: buyerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lib.UpdateBuyerNameDescriptionParams"
        description: UpdateBuyerNameDescriptionParams
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.IdentityBuyer"
        "500":
          description: ""
  "/org/{orgId}/buyer/{buyerId}/entitlement":
    get:
      tags:
        - Entitlement
      summary: List all entitlements of the buyer
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Buyer ID
          name: buyerId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/shared.WorkloadEntitlement"
        "500":
          description: ""
  "/org/{orgId}/entitlement":
    get:
      tags:
        - Entitlement
      summary: List all entitlements under the organization
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/shared.WorkloadEntitlement"
        "500":
          description: ""
  "/org/{orgId}/entitlement/{entitlementId}":
    get:
      tags:
        - Entitlement
      summary: Get entitlement
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Entitlement ID
          name: entitlementId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.WorkloadEntitlement"
        "500":
          description: ""
  "/org/{orgId}/entitlement/{entitlementId}/entitlementName":
    patch:
      tags:
        - Entitlement
      summary: Update entitlement name
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Entitlement ID
          name: entitlementId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lib.UpdateEntitlementNameParams"
        description: UpdateEntitlementNameParams
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.WorkloadEntitlement"
        "500":
          description: ""
  "/org/{orgId}/entitlement/{entitlementId}/entitlementTerm":
    get:
      tags:
        - Entitlement Term
      summary: List all Entitlement Terms of the Entitlement.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Entitlement ID
          name: entitlementId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/shared.WorkloadEntitlementTerm"
        "500":
          description: ""
  "/org/{orgId}/entitlement/{entitlementId}/entitlementTerm/{entitlementTermId}":
    get:
      tags:
        - Entitlement Term
      summary: Get an Entitlement Term.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Entitlement ID
          name: entitlementId
          in: path
          required: true
          schema:
            type: string
        - description: Entitlement Term ID
          name: entitlementTermId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.WorkloadEntitlementTerm"
        "500":
          description: ""
  "/org/{orgId}/entitlement/{entitlementId}/usageRecordGroup":
    get:
      tags:
        - Metering
      summary: list all UsageRecordGroups under the given entitlement
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Entitlement ID
          name: entitlementId
          in: path
          required: true
          schema:
            type: string
        - description: List pagination size, default 20
          name: limit
          in: query
          schema:
            type: integer
        - description: List pagination offset, default 0
          name: offset
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.ListUsageRecordGroupsResponse"
        "500":
          description: ""
    post:
      description: It is recommended to provide the ID in the request body
        CreateUsageRecordGroupParams, so the report can be deduplicated. All
        duplicate report will return error code 409.
      tags:
        - Metering
      summary: Report new UsageRecordGroup.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Entitlement ID
          name: entitlementId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shared.CreateUsageRecordGroupParams"
        description: RequestBody
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.MeteringUsageRecordGroup"
        "400":
          description: Bad request error description
          content:
            application/json:
              schema:
                type: string
        "409":
          description: Conflict request error description
          content:
            application/json:
              schema:
                type: string
        "500":
          description: internal error description
          content:
            application/json:
              schema:
                type: string
  "/org/{orgId}/entitlement/{entitlementId}/usageRecordReport":
    get:
      tags:
        - Metering
      summary: list all UsageRecordReports under the given entitlement
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Entitlement ID
          name: entitlementId
          in: path
          required: true
          schema:
            type: string
        - description: The Entitlement Term ID, if not given, return the UsageRecordReports
            of all Entitlement Terms under the Entitlement
          name: entitlementTermId
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.ListUsageRecordReportsResponse"
        "500":
          description: ""
  "/org/{orgId}/integration":
    get:
      tags:
        - Integration
      summary: List all integrations under the organization
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/shared.IdentityIntegration"
        "500":
          description: ""
    post:
      description: For each organization, partner & service, there should be at most one
        integration.
      tags:
        - Integration
      summary: Create an integration.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shared.CreateIntegrationParams"
        description: Create Integration Params
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.IdentityIntegration"
        "400":
          description: Bad request error description
          content:
            application/json:
              schema:
                type: string
        "500":
          description: internal error description
          content:
            application/json:
              schema:
                type: string
  "/org/{orgId}/integration/{partner}/{service}":
    get:
      tags:
        - Integration
      summary: Get the integration for the given organization, partner & service.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Cloud Partner
          name: partner
          in: path
          required: true
          schema:
            type: string
            enum:
              - AWS
              - AZURE
              - GCP
        - description: Partner Service
          name: service
          in: path
          required: true
          schema:
            type: string
            enum:
              - MARKETPLACE
              - CRM
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.IdentityIntegration"
        "500":
          description: ""
    delete:
      tags:
        - Integration
      summary: Delete the integration.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Cloud Partner
          name: partner
          in: path
          required: true
          schema:
            type: string
            enum:
              - AWS
              - AZURE
              - GCP
        - description: Partner Service
          name: service
          in: path
          required: true
          schema:
            type: string
            enum:
              - MARKETPLACE
              - CRM
      responses:
        "200":
          description: Empty string if deletion is successful
          content:
            application/json:
              schema:
                type: string
        "500":
          description: ""
    patch:
      tags:
        - Integration
      summary: Update the integration.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Cloud Partner
          name: partner
          in: path
          required: true
          schema:
            type: string
            enum:
              - AWS
              - AZURE
              - GCP
        - description: Partner Service
          name: service
          in: path
          required: true
          schema:
            type: string
            enum:
              - MARKETPLACE
              - CRM
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shared.UpdateIntegrationParams"
        description: Update Integration Params
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.IdentityIntegration"
        "400":
          description: Bad request error description
          content:
            application/json:
              schema:
                type: string
        "500":
          description: internal error description
          content:
            application/json:
              schema:
                type: string
  "/org/{orgId}/integration/{partner}/{service}/verify":
    post:
      tags:
        - Integration
      summary: Verify the integration, check whether it works correctly.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Cloud Partner
          name: partner
          in: path
          required: true
          schema:
            type: string
            enum:
              - AWS
              - AZURE
              - GCP
        - description: Partner Service
          name: service
          in: path
          required: true
          schema:
            type: string
            enum:
              - MARKETPLACE
              - CRM
      responses:
        "200":
          description: whether it is verified or not
          content:
            application/json:
              schema:
                type: boolean
        "500":
          description: ""
  "/org/{orgId}/offer":
    get:
      tags:
        - Offer
      summary: List all offers under the organization
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/shared.WorkloadOffer"
        "500":
          description: ""
    post:
      tags:
        - Offer
      summary: Create a private offer.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shared.CreateOfferParams"
        description: Create Offer Params
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.WorkloadOffer"
        "500":
          description: ""
  "/org/{orgId}/offer/{offerId}":
    get:
      tags:
        - Offer
      summary: Get the offer.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Offer ID
          name: offerId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.WorkloadOffer"
        "500":
          description: ""
    delete:
      description: Currently only the offer with status = "CREATE_PENDING" or
        "CREATE_FAILED" is allowed to be deleted.
      tags:
        - Offer
      summary: Delete the offer.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Offer ID
          name: offerId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Empty string if deletion is successful
          content:
            application/json:
              schema:
                type: string
        "500":
          description: ""
  "/org/{orgId}/offer/{offerId}/entitlement":
    get:
      tags:
        - Entitlement
      summary: List all entitlements under the offer
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Offer ID
          name: offerId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/shared.WorkloadEntitlement"
        "500":
          description: ""
  "/org/{orgId}/operation":
    get:
      description: The operations can be filtered by offerId or entitlementId. If both of
        them are provided, then it is filtered by entitlementId only.
      tags:
        - Operation
      summary: list all long running operations under the given organization, offer or
        entitlement.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: filter by offerId
          name: offerId
          in: query
          schema:
            type: string
        - description: filter by entitlementId
          name: entitlementId
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/shared.Operation"
        "500":
          description: ""
  "/org/{orgId}/partner/{partner}/entitlement":
    get:
      tags:
        - Entitlement
      summary: List all entitlements under the partner
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Cloud Partner
          name: partner
          in: path
          required: true
          schema:
            type: string
            enum:
              - AWS
              - AZURE
              - GCP
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/shared.WorkloadEntitlement"
        "500":
          description: ""
  "/org/{orgId}/partner/{partner}/offer":
    get:
      tags:
        - Offer
      summary: List all offers under the cloud partner.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Cloud Partner
          name: partner
          in: path
          required: true
          schema:
            type: string
            enum:
              - AWS
              - AZURE
              - GCP
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/shared.WorkloadOffer"
        "500":
          description: ""
  "/org/{orgId}/partner/{partner}/product":
    get:
      tags:
        - Product
      summary: List all products under the cloud partner
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Cloud Partner
          name: partner
          in: path
          required: true
          schema:
            type: string
            enum:
              - AWS
              - AZURE
              - GCP
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/shared.WorkloadProduct"
        "500":
          description: ""
  "/org/{orgId}/product":
    get:
      tags:
        - Product
      summary: List all products under the organization
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/shared.WorkloadProduct"
        "500":
          description: ""
    post:
      tags:
        - Product
      summary: Create an Product & List it to the Partner's marketplace.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shared.CreateProductParams"
        description: Create Product Params
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.WorkloadProduct"
        "500":
          description: ""
  "/org/{orgId}/product/{productId}":
    get:
      tags:
        - Product
      summary: Get the Product
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Product ID
          name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.WorkloadProduct"
        "500":
          description: ""
    delete:
      description: Currently only the product with status = "CREATE_PENDING" or
        "CREATE_FAILED" is allowed to be deleted.
      tags:
        - Product
      summary: Delete the product.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Product ID
          name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Empty string if deletion is successful
          content:
            application/json:
              schema:
                type: string
        "500":
          description: ""
    patch:
      tags:
        - Product
      summary: Currently, only the Fulfillment URL is allowed to update.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Product ID
          name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shared.UpdateProductParams"
        description: Update Product Params
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.WorkloadProduct"
        "500":
          description: ""
  "/org/{orgId}/product/{productId}/dimension":
    get:
      tags:
        - Product
      summary: List the Metering Dimensions of the Product
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Product ID
          name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/shared.AwsSaasProductDimension"
        "500":
          description: ""
  "/org/{orgId}/product/{productId}/entitlement":
    get:
      tags:
        - Entitlement
      summary: List all entitlements under the product
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Product ID
          name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/shared.WorkloadEntitlement"
        "500":
          description: ""
  "/org/{orgId}/product/{productId}/offer":
    get:
      tags:
        - Offer
      summary: List all offers under the product.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Product ID
          name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/shared.WorkloadOffer"
        "500":
          description: ""
  "/org/{orgId}/product/{productId}/usageRecordGroup":
    get:
      tags:
        - Metering
      summary: list all UsageRecordGroups under the given product
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: Product ID
          name: productId
          in: path
          required: true
          schema:
            type: string
        - description: List pagination size, default 20
          name: limit
          in: query
          schema:
            type: integer
        - description: List pagination offset, default 0
          name: offset
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.ListUsageRecordGroupsResponse"
        "500":
          description: ""
  "/org/{orgId}/revenueReport":
    post:
      description: Get the revenue report of the given organization, product, entitlement,
        or buyer.
      tags:
        - Report
      summary: Get the revenue report.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shared.GetRevenueReportParams"
        description: Get Revenue Report Params
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.RevenueReport"
        "400":
          description: Bad request error description
          content:
            application/json:
              schema:
                type: string
        "500":
          description: internal error description
          content:
            application/json:
              schema:
                type: string
  "/org/{orgId}/usageRecordGroup":
    get:
      tags:
        - Metering
      summary: list all UsageRecordGroups under the given organization
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: List pagination size, default 20
          name: limit
          in: query
          schema:
            type: integer
        - description: List pagination offset, default 0
          name: offset
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.ListUsageRecordGroupsResponse"
        "500":
          description: ""
  "/org/{orgId}/usageRecordGroup/{usageRecordGroupId}":
    get:
      tags:
        - Metering
      summary: get an UsageRecordGroup by organization_entitlement_usageRecordGroup id
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
        - description: UsageRecordGroup ID
          name: usageRecordGroupId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.MeteringUsageRecordGroup"
        "500":
          description: ""
  "/org/{orgId}/usageReport":
    post:
      description: Get the daily usage report of the given entitlement, the default
        timespan is lifetime.
      tags:
        - Report
      summary: Get the usage report.
      parameters:
        - example: Bearer 
          description: Bearer Access Token
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: Organization ID
          name: orgId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shared.GetUsageReportParams"
        description: Get Usage Report Params
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.UsageReport"
        "400":
          description: Bad request error description
          content:
            application/json:
              schema:
                type: string
        "500":
          description: internal error description
          content:
            application/json:
              schema:
                type: string
  /public/apiClient/accessToken:
    post:
      description: Get the Bearer Access Token by giving the Suger API Client ID & Client
        Secret.
      tags:
        - API Auth
      summary: Get the Bearer Access Token to access Suger API
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shared.GetApiClientAccessTokenParams"
        description: Suger API Client
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shared.ApiClientAccessToken"
        "500":
          description: ""
servers:
  - url: https://api.suger.cloud
components:
  schemas:
    http.Header:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    lib.UpdateBuyerNameDescriptionParams:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        organizationID:
          type: string
    lib.UpdateEntitlementNameParams:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        organizationID:
          type: string
    marketplacemetering.BatchMeterUsageOutput:
      type: object
      properties:
        resultMetadata:
          $ref: "#/components/schemas/middleware.Metadata"
        results:
          description: >-
            Contains all UsageRecords processed by BatchMeterUsage. These
            records were

            either honored by AWS Marketplace Metering Service or were invalid. Invalid

            records should be fixed before being resubmitted.
          type: array
          items:
            $ref: "#/components/schemas/types.UsageRecordResult"
        unprocessedRecords:
          description: >-
            Contains all UsageRecords that were not processed by
            BatchMeterUsage. This is a

            list of UsageRecords. You can retry the failed request by making another

            BatchMeterUsage call with this list as input in the BatchMeterUsageRequest.
          type: array
          items:
            $ref: "#/components/schemas/types.UsageRecord"
    marketplacemeteringv1.BatchUsageEventOkResponse:
      type: object
      properties:
        count:
          type: integer
        result:
          type: array
          items:
            $ref: "#/components/schemas/marketplacemeteringv1.UsageBatchEventOkMess\
              age"
    marketplacemeteringv1.UsageBatchEventOkMessage:
      type: object
      properties:
        dimension:
          description: Dimension identifier
          type: string
        effectiveStartTime:
          description: Time in UTC when the usage event occurred
          type: string
        error:
          $ref: "#/components/schemas/marketplacemeteringv1.UsageEventConflictRespo\
            nse"
        messageTime:
          description: Time this message was created in UTC
          type: string
        planId:
          description: Plan associated with the purchased offer
          type: string
        quantity:
          description: Number of units consumed
          type: number
        resourceId:
          description: Identifier of the resource against which usage is emitted
          type: string
        resourceUri:
          description: Identifier of the managed app resource against which usage is emitted
          type: string
        status:
          description: Status of the operation.
          type: string
        usageEventId:
          description: Unique identifier associated with the usage event
          type: string
    marketplacemeteringv1.UsageEventConflictResponse:
      type: object
      properties:
        additionalInfo:
          $ref: "#/components/schemas/marketplacemeteringv1.UsageEventConflictRespo\
            nseAdditionalInfo"
        code:
          type: string
        message:
          type: string
    marketplacemeteringv1.UsageEventConflictResponseAdditionalInfo:
      type: object
      properties:
        acceptedMessage:
          $ref: "#/components/schemas/marketplacemeteringv1.UsageEventOkResponse"
    marketplacemeteringv1.UsageEventOkResponse:
      type: object
      properties:
        dimension:
          description: Dimension identifier
          type: string
        effectiveStartTime:
          description: Time in UTC when the usage event occurred
          type: string
        messageTime:
          description: Time this message was created in UTC
          type: string
        planId:
          description: Plan associated with the purchased offer
          type: string
        quantity:
          description: Number of units consumed
          type: number
        resourceId:
          description: Identifier of the resource against which usage is emitted
          type: string
        resourceUri:
          description: Identifier of the managed app resource against which usage is emitted
          type: string
        status:
          description: Status of the operation.
          type: string
        usageEventId:
          description: Unique identifier associated with the usage event
          type: string
    middleware.Metadata:
      type: object
    partnercentersubmission.AzureAudience:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
    partnercentersubmission.AzureGovernmentCertification:
      type: object
      properties:
        title:
          type: string
        uri:
          type: string
        validationResults:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureValidationResu\
              lt"
    partnercentersubmission.AzureListingContact:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        phone:
          type: string
        type:
          type: string
          enum:
            - CustomerSupport
            - Engineering
            - ChannelManager
        uri:
          type: string
    partnercentersubmission.AzureListingUri:
      type: object
      properties:
        displayText:
          type: string
        subtype:
          type: string
        type:
          type: string
        uri:
          type: string
    partnercentersubmission.AzureLocalizedDateTime:
      type: object
      properties:
        dateTimeInUtc:
          type: string
        localizePerMarket:
          type: boolean
    partnercentersubmission.AzureLocalizedTimeRange:
      type: object
      properties:
        endAt:
          $ref: "#/components/schemas/partnercentersubmission.AzureLocalizedDateTime"
        startAt:
          $ref: "#/components/schemas/partnercentersubmission.AzureLocalizedDateTime"
    partnercentersubmission.AzureMarket:
      type: object
      properties:
        friendlyName:
          type: string
        marketCode:
          description: ISO Country Code
          type: string
    partnercentersubmission.AzureMarketState:
      type: object
      properties:
        marketCode:
          description: ISO Country Code
          type: string
        state:
          type: string
          enum:
            - Disabled
            - Enabled
            - StopSelling
            - Terminated
    partnercentersubmission.AzurePendingUpdateInfo:
      type: object
      properties:
        status:
          type: string
        updateType:
          type: string
    partnercentersubmission.AzurePrice:
      type: object
      properties:
        currencyCode:
          description: ISO currency code, Three characters
          type: string
        openPrice:
          type: number
        priceTierID:
          type: string
    partnercentersubmission.AzurePriceCadence:
      type: object
      properties:
        type:
          type: string
          enum:
            - Month
            - Year
        value:
          type: integer
    partnercentersubmission.AzurePriceSchedule:
      type: object
      properties:
        priceCadence:
          $ref: "#/components/schemas/partnercentersubmission.AzurePriceCadence"
        pricingModel:
          type: string
          enum:
            - Flat
            - Recurring
            - Usage
        pricingUnits:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzurePricingUnit"
        retailPrice:
          $ref: "#/components/schemas/partnercentersubmission.AzurePrice"
    partnercentersubmission.AzurePricingUnit:
      type: object
      properties:
        isUnlimitedUnit:
          type: boolean
        lowerUnit:
          type: integer
        name:
          type: string
          enum:
            - sharedcore
            - transactions
        unitType:
          type: string
        upperUnit:
          type: integer
    partnercentersubmission.AzureProduct:
      type: object
      properties:
        availabilities:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureProductAvailab\
              ility"
        branches:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureProductBranch"
        externalIDs:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.TypeValue"
        id:
          type: string
        isModularPublishing:
          type: boolean
        listings:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureProductListing"
        name:
          type: string
        packageConfigurations:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureProductPackage\
              Configuration"
        properties:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureProductProperty"
        resourceType:
          type: string
        setup:
          $ref: "#/components/schemas/partnercentersubmission.AzureProductSetup"
        submissions:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureProductSubmiss\
              ion"
        variants:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureProductVariant"
    partnercentersubmission.AzureProductAvailability:
      type: object
      properties:
        emailAudiences:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureAudience"
        enterpriseLicensing:
          type: string
        id:
          type: string
        resourceType:
          type: string
        subscriptionAudiences:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureAudience"
        visibility:
          type: string
    partnercentersubmission.AzureProductBranch:
      type: object
      properties:
        currentDraftInstanceID:
          type: string
        friendlyName:
          type: string
        id:
          type: string
        module:
          type: string
        resourceType:
          type: string
        type:
          type: string
        variantID:
          type: string
    partnercentersubmission.AzureProductFeatureAvailability:
      type: object
      properties:
        customMeters:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureProductVariant\
              CustomMeter"
        id:
          type: string
        isHidden:
          type: boolean
        marketStates:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureMarketState"
        markets:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureMarket"
        priceSchedules:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureProductVariant\
              PriceSchedule"
        properties:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.TypeValue"
        resourceType:
          description: ResourceType = FeatureAvailability
          type: string
        subscriptionAudiences:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureAudience"
        tenantAudiences:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureAudience"
        trial:
          $ref: "#/components/schemas/partnercentersubmission.AzureProductVariantTr\
            ial"
        visibility:
          type: string
          enum:
            - Public
            - Private
    partnercentersubmission.AzureProductListing:
      type: object
      properties:
        accessInformation:
          type: string
        assets:
          description: Not original fields. They are populated by other API calls
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureProductListing\
              Asset"
        compatibleProducts:
          type: array
          items:
            type: string
        description:
          type: string
        gettingStartedInstructions:
          type: string
        id:
          type: string
        keywords:
          type: array
          items:
            type: string
        languageCode:
          type: string
        listingContacts:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureListingContact"
        listingUris:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureListingUri"
        productDisplayName:
          type: string
        publisherName:
          type: string
        resourceType:
          type: string
          enum:
            - AzureListing
        shortDescription:
          type: string
        summary:
          type: string
        title:
          type: string
    partnercentersubmission.AzureProductListingAsset:
      type: object
      properties:
        description:
          type: string
        fileName:
          type: string
        fileSasUri:
          type: string
        friendlyName:
          type: string
        id:
          type: string
        order:
          type: integer
        publisherDefinedSasUri:
          type: string
        resourceType:
          type: string
          enum:
            - ListingAsset
            - ListingImage
            - ListingVideo
        state:
          type: string
          enum:
            - PendingUpload
            - Uploaded
            - InProcessing
            - Processed
            - ProcessFailed
        type:
          type: string
    partnercentersubmission.AzureProductPackageConfiguration:
      type: object
      properties:
        azureActiveDirectoryApplicationID:
          type: string
        azureActiveDirectoryTenantID:
          type: string
        connectionWebhook:
          type: string
        id:
          type: string
        landingPageUri:
          type: string
        resourceType:
          type: string
          enum:
            - AzureSoftwareAsAServicePackageConfiguration
    partnercentersubmission.AzureProductProperty:
      type: object
      properties:
        additionalCategories:
          type: array
          items:
            type: string
        appVersion:
          type: string
        applicableProducts:
          type: array
          items:
            type: string
        categories:
          type: array
          items:
            type: string
        customAmendments:
          type: array
          items:
            type: string
        extendedProperties:
          type: array
          items:
            type: string
        globalAmendmentTerms:
          type: string
        hideKeys:
          type: array
          items:
            type: string
        id:
          type: string
        industries:
          type: array
          items:
            type: string
        leveledCategories:
          type: object
          additionalProperties: true
        leveledIndustries:
          type: object
          additionalProperties: true
        marketingOnlyChange:
          type: boolean
        productTags:
          type: array
          items:
            type: string
        resourceType:
          type: string
        submissionVersion:
          type: string
        termsOfUse:
          type: string
        useEnterpriseContract:
          type: boolean
    partnercentersubmission.AzureProductSetup:
      type: object
      properties:
        callToAction:
          type: string
          enum:
            - free
            - free-trial
            - contact-me
        channelStates:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.TypeValue"
        enableTestDrive:
          type: boolean
        resourceType:
          type: string
          enum:
            - AzureProductSetup
        sellingOption:
          type: string
          enum:
            - ListingOnly
            - ListAndSell
        testDriveType:
          type: string
        trialUri:
          type: string
    partnercentersubmission.AzureProductSubmission:
      type: object
      properties:
        areResourcesReady:
          type: boolean
        friendlyName:
          type: string
        id:
          type: string
        pendingUpdateInfo:
          $ref: "#/components/schemas/partnercentersubmission.AzurePendingUpdateInfo"
        publishedTimeInUtc:
          type: string
          format: date-time
        releaseNumber:
          type: integer
        resourceType:
          type: string
          enum:
            - Submission
        resources:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.TypeValue"
        state:
          type: string
          enum:
            - Inprogress
            - Published
        subState:
          type: string
          enum:
            - InDraft
            - Submitted
            - Failed
            - FailedInCertification
            - ReadyToPublish
            - Publishing
            - Published
            - InStore
        targets:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.TypeValue"
        variantResources:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureVariantResource"
    partnercentersubmission.AzureProductVariant:
      type: object
      properties:
        azureGovernmentCertifications:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureGovernmentCert\
              ification"
        cloudAvailabilities:
          type: array
          items:
            type: string
        conversionPaths:
          type: string
        extendedProperties:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.TypeValue"
        externalID:
          type: string
        featureAvailabilities:
          description: Not original fields. They are populated by other API calls
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureProductFeature\
              Availability"
        friendlyName:
          type: string
        id:
          type: string
        leadGenID:
          type: string
        referenceVariantID:
          type: string
        resourceType:
          type: string
          enum:
            - AzureSkuVariant
            - AzureTestDriveVariant
        state:
          type: string
          enum:
            - InActive
            - Active
    partnercentersubmission.AzureProductVariantCustomMeter:
      type: object
      properties:
        displayName:
          type: string
        id:
          type: string
        includedBaseQuantities:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.IncludedBaseQuantity"
        isEnabled:
          type: boolean
        priceInUsd:
          type: number
        uniqueID:
          type: string
        unitOfMeasure:
          type: string
    partnercentersubmission.AzureProductVariantPriceSchedule:
      type: object
      properties:
        dateTimeRange:
          $ref: "#/components/schemas/partnercentersubmission.AzureLocalizedTimeRan\
            ge"
        friendlyName:
          type: string
        isBaseSchedule:
          description: There is only one base schedule.
          type: boolean
        marketCodes:
          description: ISO country code
          type: array
          items:
            type: string
        schedules:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzurePriceSchedule"
    partnercentersubmission.AzureProductVariantTrial:
      type: object
      properties:
        dateTimeRange:
          $ref: "#/components/schemas/partnercentersubmission.AzureLocalizedTimeRan\
            ge"
        duration:
          type: integer
        durationType:
          type: string
          enum:
            - Minute
            - Days
            - Months
        type:
          type: string
          enum:
            - NoTrial
            - TimedAccess
            - TimedUsage
            - Unlimited
    partnercentersubmission.AzureValidationResult:
      type: object
      properties:
        errorMessage:
          type: string
        memberNames:
          type: array
          items:
            type: string
    partnercentersubmission.AzureVariantResource:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.TypeValue"
        variantID:
          type: string
    partnercentersubmission.IncludedBaseQuantity:
      type: object
      properties:
        isInfinite:
          type: boolean
        quantity:
          type: number
        recurringUnit:
          type: string
          enum:
            - Monthly
            - Annual
    partnercentersubmission.TypeValue:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
    servicecontrol.ReportError:
      type: object
      properties:
        operationId:
          description: "OperationId: The Operation.operation_id value from the request."
          type: string
        status:
          $ref: "#/components/schemas/servicecontrol.Status"
    servicecontrol.ReportResponse:
      type: object
      properties:
        header:
          $ref: "#/components/schemas/http.Header"
        httpstatusCode:
          description: |-
            HTTPStatusCode is the server's response status code. When using a
            resource method's Do call, this will always be in the 2xx range.
          type: integer
        reportErrors:
          description: >-
            ReportErrors: Partial failures, one for each `Operation` in the

            request that failed processing. There are three possible combinations

            of the RPC status: 1. The combination of a successful RPC status and

            an empty `report_errors` list indicates a complete success where all

            `Operations` in the request are processed successfully. 2. The

            combination of a successful RPC status and a non-empty

            `report_errors` list indicates a partial success where some

            `Operations` in the request succeeded. Each `Operation` that failed

            processing has a corresponding item in this list. 3. A failed RPC

            status indicates a general non-deterministic failure. When this

            happens, it's impossible to know which of the 'Operations' in the

            request succeeded or failed.
          type: array
          items:
            $ref: "#/components/schemas/servicecontrol.ReportError"
        serviceConfigId:
          description: "ServiceConfigId: The actual config id used to process the request."
          type: string
        serviceRolloutId:
          description: |-
            ServiceRolloutId: The current service rollout id used to process the
            request.
          type: string
    servicecontrol.Status:
      type: object
      properties:
        code:
          description: |-
            Code: The status code, which should be an enum value of
            google.rpc.Code.
          type: integer
        details:
          description: |-
            Details: A list of messages that carry the error details. There is a
            common set of message types for APIs to use.
          type: array
          items:
            type: array
            items:
              type: integer
        message:
          description: |-
            Message: A developer-facing error message, which should be in
            English. Any user-facing error message should be localized and sent
            in the google.rpc.Status.details field, or localized by the client.
          type: string
    shared.AddEntitlementCreditParams:
      type: object
      required:
        - creditAmountIncrement
        - entitlementID
        - organizationID
      properties:
        creditAmountIncrement:
          description: The amount to be added to the credit amount.
          type: number
        entitlementID:
          type: string
        organizationID:
          type: string
    shared.AddEntitlementCreditResponse:
      type: object
      properties:
        creditAmountIncrement:
          description: The amount to be added to the credit amount.
          type: number
        entitlementID:
          type: string
        entitlementTermID:
          type: string
        newCreditAmount:
          description: The new credit amount after the increment.
          type: number
        organizationID:
          type: string
    shared.ApiClientAccessToken:
      type: object
      properties:
        access_token:
          type: string
        expires_in:
          type: integer
        token_type:
          type: string
    shared.AwsAccountIdentifier:
      type: object
      properties:
        awsAccountID:
          description: The AWS Account ID of the buyer in AWS Marketplace
          type: string
        awsCustomerID:
          description: The AWS Customer ID of the buyer in AWS Marketplace
          type: string
        companyInfo:
          $ref: "#/components/schemas/shared.CompanyInfo"
        dataFeedAccountID:
          description: The Account ID in AWS Marketplace Data Feed service
          type: string
    shared.AwsIntegration:
      description: The data struct to store integration info for Suger service to access
        the client's AWS services.
      type: object
      properties:
        externalID:
          description: The external ID for assuming IAM role. If empty, means no external
            ID set or needed. Otherwise, it should be auth_id in table
            identity.organization.
          type: string
        iamRoleArn:
          description: The AWS IAM role for Suger service to assume to access the client's
            AWS services.
          type: string
        marketplaceStartDate:
          description: AWS Marketplace start date which comes from MDFS Full-Sync.
          type: string
          format: date-time
        mcasFullSyncDone:
          description: Is AWS Marketplace Commerce Analytics Service (MCAS) full-sync done.
          type: boolean
        mcasIamRoleArn:
          description: IAM role ARN to allow AWS Marketplace to write to the S3 bucket and
            publish notifications to the SNS topic.
          type: string
        mcasS3Bucket:
          description: S3 bucket for AWS Marketplace Commerce Analytics Service (MCAS)
          type: string
        mcasSnsTopic:
          description: SNS topic ARN for AWS Marketplace Commerce Analytics Service (MCAS)
          type: string
        mdfsFullSyncDone:
          description: Is AWS Marketplace Data Feeds Service (MDFS) full-sync done.
          type: boolean
        mdfsKmsKeyArn:
          description: KMS Key ARN for the S3 bucket of AWS Marketplace Data Feeds Service
            (MDFS)
          type: string
        mdfsS3BucketArn:
          description: S3 bucket ARN for AWS Marketplace Data Feeds Service (MDFS)
          type: string
        policyArns:
          description: The policy ARNs in the IAM role.
          type: array
          items:
            type: string
    shared.AwsSaasProduct:
      type: object
      properties:
        Description:
          $ref: "#/components/schemas/shared.AwsSaasProductDescription"
        Dimensions:
          type: array
          items:
            $ref: "#/components/schemas/shared.AwsSaasProductDimension"
        PromotionalResources:
          $ref: "#/components/schemas/shared.AwsSaasProductPromotionalResources"
        SupportInformation:
          $ref: "#/components/schemas/shared.AwsSaasProductSupportInformation"
        Versions:
          type: array
          items:
            $ref: "#/components/schemas/shared.AwsSaasProductVersion"
        dataFeedProductId:
          description: The product Id in AWS Marketplace Data Feed Service.
          type: string
        productId:
          type: string
    shared.AwsSaasProductAdditionalResource:
      type: object
      properties:
        Text:
          type: string
        Type:
          type: string
        Url:
          type: string
    shared.AwsSaasProductDeliveryOption:
      type: object
      properties:
        FulfillmentUrl:
          type: string
        Id:
          type: string
        Type:
          type: string
    shared.AwsSaasProductDescription:
      type: object
      properties:
        AssociatedProducts:
          type: string
        Categories:
          type: array
          items:
            type: string
        EuW8Submitted:
          type: boolean
        Highlights:
          type: array
          items:
            type: string
        LongDescription:
          type: string
        Manufacturer:
          type: string
        ProductCode:
          type: string
        ProductTitle:
          type: string
        Registered:
          type: boolean
        SearchKeywords:
          type: array
          items:
            type: string
        ShortDescription:
          type: string
        Sku:
          type: string
        UsW9Submitted:
          type: boolean
        Visibility:
          type: string
    shared.AwsSaasProductDimension:
      type: object
      properties:
        Description:
          type: string
        Key:
          type: string
        Name:
          type: string
        Types:
          type: array
          items:
            type: string
        Unit:
          type: string
    shared.AwsSaasProductPromotionalResources:
      type: object
      properties:
        AdditionalResources:
          type: array
          items:
            $ref: "#/components/schemas/shared.AwsSaasProductAdditionalResource"
        LogoUrl:
          type: string
    shared.AwsSaasProductSupportInformation:
      type: object
      properties:
        Description:
          type: string
    shared.AwsSaasProductVersion:
      type: object
      properties:
        DeliveryOptions:
          type: array
          items:
            $ref: "#/components/schemas/shared.AwsSaasProductDeliveryOption"
        Id:
          type: string
    shared.AwsSnsSubscription:
      type: object
      properties:
        Endpoint:
          type: string
        Protocol:
          type: string
        Status:
          type: string
        SubscriptionArn:
          type: string
        TopicArn:
          type: string
    shared.AzureADIdentifier:
      type: object
      properties:
        buyerInfo:
          $ref: "#/components/schemas/shared.AzureBuyerInfo"
        companyInfo:
          $ref: "#/components/schemas/shared.CompanyInfo"
        emailId:
          description: Email address
          type: string
        objectId:
          type: string
        puid:
          description: ID of the user, used as External ID of suger IdentityBuyer.
          type: string
        tenantId:
          type: string
    shared.AzureBuyerInfo:
      type: object
      properties:
        billingAccountId:
          type: string
        customerId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    shared.AzureCredential:
      type: object
      properties:
        clientID:
          type: string
        clientSecret:
          type: string
        clientSecretKey:
          description: The secret key used to store the ClientSecret.
          type: string
        resourceID:
          type: string
        tenantID:
          type: string
    shared.AzureIntegration:
      type: object
      properties:
        cmaFullSyncDone:
          description: Is Azure Commercial Marketplace Analytics (CMA) full-sync done.
          type: boolean
        credential:
          $ref: "#/components/schemas/shared.AzureCredential"
    shared.AzureMarketplaceSubscription:
      type: object
      properties:
        allowedCustomerOperations:
          type: array
          items:
            type: string
            enum:
              - Read
              - Update
              - Delete
        autoRenew:
          type: boolean
        beneficiary:
          $ref: "#/components/schemas/shared.AzureADIdentifier"
        created:
          type: string
          format: date-time
        fulfillmentId:
          type: string
        id:
          type: string
        isFreeTrial:
          type: boolean
        isTest:
          type: boolean
        lastModified:
          type: string
        name:
          type: string
        offerId:
          type: string
        planId:
          type: string
        publisherId:
          type: string
        purchaser:
          $ref: "#/components/schemas/shared.AzureADIdentifier"
        quantity:
          type: integer
        saasSubscriptionStatus:
          type: string
          enum:
            - NotStarted
            - PendingFulfillmentStart
            - Subscribed
            - Suspended
            - Unsubscribed
        sandboxType:
          type: string
          enum:
            - None
            - Csp
        sessionId:
          type: string
        sessionMode:
          type: string
          enum:
            - None
            - DryRun
        storeFront:
          type: string
        term:
          $ref: "#/components/schemas/shared.AzureTerm"
    shared.AzureTerm:
      type: object
      properties:
        chargeDuration:
          type: string
        endDate:
          type: string
          format: date-time
        startDate:
          type: string
          format: date-time
        termUnit:
          type: string
    shared.BuyerInfo:
      type: object
      properties:
        awsBuyer:
          $ref: "#/components/schemas/shared.AwsAccountIdentifier"
        azureBuyer:
          $ref: "#/components/schemas/shared.AzureADIdentifier"
        collectableAmount:
          description: The amount that the seller can collect. It excludes the marketplace
            commision fee.
          type: number
        disbursedAmount:
          description: The amount that has been disbursed to the seller account.
          type: number
        gcpBuyer:
          $ref: "#/components/schemas/shared.GcpMarketplaceUserAccount"
        invoicedAmount:
          description: The amount that the buyer has got invoiced.
          type: number
    shared.CommitDimension:
      description: The commit dimension. There may be one or more commit dimensions defined
        in single product, offer or entitlement.
      type: object
      properties:
        category:
          type: string
        description:
          type: string
        key:
          description: API name of the dimension
          type: string
        length:
          description: The term length for the commit amount, such as 6 months, or 1 year.
            length is used together with timeUnit
          type: integer
        maximumUsers:
          description: The maximum number of users for PER_USER commit
          type: integer
          default: 1000000
          maximum: 1000000
          minimum: 1
        minimumUsers:
          description: The minimum number of users for PER_USER commit
          type: integer
          default: 1
          maximum: 1000000
          minimum: 1
        name:
          description: Display name of the dimension
          type: string
        quantity:
          description: The quantity of this commit.
          type: integer
        rate:
          description: The commit amount.
          type: number
        timeUnit:
          description: The term unit for the commit amount.
          type: string
          enum:
            - DAY
            - MONTH
            - YEAR
        type:
          description: The Commit Dimension Type.
          type: string
          enum:
            - FLAT_RATE
            - PER_USER
        types:
          type: array
          items:
            type: string
    shared.CompanyInfo:
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        country:
          type: string
        emailDomain:
          type: string
        name:
          type: string
        postalCode:
          type: string
        state:
          type: string
    shared.CreateIntegrationParams:
      type: object
      required:
        - info
        - organizationID
        - partner
        - service
      properties:
        info:
          $ref: "#/components/schemas/shared.IntegrationInfo"
        organizationID:
          type: string
        partner:
          type: string
          enum:
            - AWS
            - AZURE
            - GCP
        service:
          type: string
          enum:
            - MARKETPLACE
    shared.CreateOfferParams:
      type: object
      required:
        - info
        - name
        - organizationID
        - partner
        - productID
        - service
      properties:
        creationTime:
          description: Optional
          type: string
        endTime:
          description: Optional, only applicable for the SUBSCRIBE type of private offer.
          type: string
          format: date-time
          x-omitempty: true
          nullable: true
        expireTime:
          description: Optional
          type: string
          format: date-time
          x-omitempty: true
          nullable: true
        externalID:
          description: Leave it empty when creating private offer.
          type: string
        id:
          description: Leave it empty when creating private offer.
          type: string
        info:
          $ref: "#/components/schemas/shared.OfferInfo"
        name:
          description: Offer name
          type: string
        offerType:
          description: Optional
          type: string
          enum:
            - DEFAULT
            - COMMIT
            - SUBSCRIBE
            - FREE_TRIAL
            - FLAT_RATE
            - PER_USER
            - UNKNOWN
        organizationID:
          type: string
        partner:
          type: string
          enum:
            - AWS
            - AZURE
            - GCP
        productID:
          type: string
        service:
          type: string
          enum:
            - MARKETPLACE
        status:
          description: optional
          type: string
    shared.CreateProductParams:
      type: object
      properties:
        externalID:
          type: string
        fulfillmentUrl:
          type: string
        id:
          description: Optional, leaving it empty returns a newly generated id.
          type: string
        info:
          $ref: "#/components/schemas/shared.ProductInfo"
        name:
          type: string
        organizationID:
          type: string
        partner:
          type: string
          enum:
            - AWS
            - AZURE
            - GCP
        productType:
          type: string
        service:
          type: string
          enum:
            - MARKETPLACE
        status:
          type: string
    shared.CreateUsageRecordGroupParams:
      type: object
      required:
        - entitlementID
        - organizationID
        - records
      properties:
        entitlementID:
          type: string
        id:
          description: uuid of the UsageRecordGroup (the size is up to 36 characters), if
            not provided, suger will generate one.
          type: string
        organizationID:
          type: string
        records:
          type: object
          additionalProperties:
            type: number
    shared.EntitlementInfo:
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: string
        autoRenew:
          description: Is this Entitlement Auto Renew enabled.
          type: boolean
        awsEntitlements:
          description: Nullable. AWS Entitlements from AWS Marketplace.
          type: array
          items:
            $ref: "#/components/schemas/types.Entitlement"
        azureSubscriptions:
          description: Nullable. Azure Subscriptions from Azure Marketplace.
          type: array
          items:
            $ref: "#/components/schemas/shared.AzureMarketplaceSubscription"
        collectableAmount:
          description: The amount that the seller can collect. It excludes the marketplace
            commision fee.
          type: number
        commits:
          description: The dimensions for commit.
          type: array
          items:
            $ref: "#/components/schemas/shared.CommitDimension"
        currency:
          description: The default Currency is USD.
          type: string
        dimensions:
          description: The dimensions for usage-based metering.
          type: array
          items:
            $ref: "#/components/schemas/shared.MeteringDimension"
        disbursedAmount:
          description: The amount that has been disbursed to the seller account.
          type: number
        discount:
          description: The rate of discount (0 ~ 1.0), such as 0.1 which is 10% off. 0
            which is no discount.
          type: number
        eulaType:
          type: string
          enum:
            - SCMP
            - ECMP
            - CURRENT
            - CUSTOM
        eulaUrl:
          type: string
        gcpEntitlements:
          description: Nullable. GCP Entitlements from GCP Marketplace.
          type: array
          items:
            $ref: "#/components/schemas/shared.GcpMarketplaceEntitlement"
        gcpPlans:
          description: Only applicable for GCP Marketplace Entitlements.
          type: array
          items:
            $ref: "#/components/schemas/shared.GcpPurchasePlan"
        invoicedAmount:
          description: The amount that the buyer has got invoiced.
          type: number
        paymentInstallments:
          description: For flexible payment schedules
          type: array
          items:
            $ref: "#/components/schemas/shared.PaymentInstallment"
        refundCancelationPolicy:
          type: string
        sellerNotes:
          type: string
    shared.EntitlementTermInfo:
      type: object
      properties:
        type:
          type: string
          enum:
            - AutoRenew
            - PlanChange
    shared.EntitlementUsageRecord:
      type: object
      properties:
        amounts:
          type: array
          items:
            type: number
        date:
          type: string
          format: date-time
        keys:
          type: array
          items:
            type: string
        quantities:
          type: array
          items:
            type: number
    shared.GcpCommerceProducerExternalAccountSpec:
      type: object
      properties:
        loginUri:
          type: string
        signupUri:
          type: string
        singleSignOnUri:
          type: string
    shared.GcpCommerceProducerListingSpec:
      type: object
      properties:
        externalAccountSpec:
          $ref: "#/components/schemas/shared.GcpCommerceProducerExternalAccountSpec"
        listingType:
          type: string
          enum:
            - BillingIntegratedManagedService
        marketingSpec:
          $ref: "#/components/schemas/shared.GcpCommerceProducerMarketingSpec"
        purchaseSpec:
          $ref: "#/components/schemas/shared.GcpCommerceProducerPurchaseSpec"
    shared.GcpCommerceProducerMarketingSpec:
      type: object
      properties:
        description:
          type: string
        displayNames:
          description: In format of "{provider-id}/{product-name}"
          type: array
          items:
            type: string
        eulaUrl:
          type: string
        externalMarketingUrl:
          type: string
        icon:
          description: In format of "base64://..."
          type: string
        searchCategories:
          type: array
          items:
            type: string
        searchDescription:
          type: string
        searchKeywords:
          type: array
          items:
            type: string
        shortTitle:
          type: string
        supportSpec:
          $ref: "#/components/schemas/shared.GcpCommerceProducerSupportSpec"
        title:
          description: The product title.
          type: string
    shared.GcpCommerceProducerPrice:
      type: object
      properties:
        currencyCode:
          description: ISO currency code, Three UPPER_CASE characters
          type: string
        nanos:
          description: Decimal part of the price. For example, 2000000 = 0.002, 200000000 =
            0.2
          type: integer
        units:
          description: Integer part of the price.
          type: integer
    shared.GcpCommerceProducerPriceInfo:
      type: object
      properties:
        description:
          type: string
        priceModel:
          type: string
          enum:
            - FREE
            - SUBSCRIPTION
            - USAGE
            - SUBSCRIPTION_PLUS_USAGE
        subscriptionPlans:
          description: Commit price plan, when priceModel = SUBSCRIPTION or
            SUBSCRIPTION_PLUS_USAGE.
          type: array
          items:
            $ref: "#/components/schemas/shared.GcpCommerceProducerPriceSubscription"
        usageFees:
          description: Usage based metering plan, when priceModel =  USAGE or
            SUBSCRIPTION_PLUS_USAGE
          type: array
          items:
            $ref: "#/components/schemas/shared.GcpCommerceProducerPriceUsage"
    shared.GcpCommerceProducerPriceSubscription:
      type: object
      properties:
        period:
          type: string
          enum:
            - ONE_YEAR
        price:
          $ref: "#/components/schemas/shared.GcpCommerceProducerPrice"
        taxCategoryOverride:
          type: string
          enum:
            - TAX_CATEGORY_UNSPECIFIED
    shared.GcpCommerceProducerPriceTier:
      type: object
      properties:
        endUsageAmount:
          description: The usage amount below which this tier is effective.
          type: number
        price:
          $ref: "#/components/schemas/shared.GcpCommerceProducerPrice"
        startUsageAmount:
          description: The usage amount beyond which this tier is effective.
          type: number
    shared.GcpCommerceProducerPriceUsage:
      type: object
      properties:
        displayQuantity:
          description: Default value is 1.
          type: integer
        metricId:
          description: the usage metering dimension key
          type: string
        priceTiers:
          type: array
          items:
            $ref: "#/components/schemas/shared.GcpCommerceProducerPriceTier"
        taxCategoryOverride:
          type: string
          enum:
            - TAX_CATEGORY_UNSPECIFIED
    shared.GcpCommerceProducerPurchaseMetric:
      type: object
      properties:
        description:
          description: "Description: A detailed description of the metric, which can be
            used in documentation."
          type: string
        displayName:
          type: string
        displayUnit:
          type: string
        displayUnitDescription:
          type: string
        id:
          description: The usage metering dimension key, in format of
            "{plan_key}_{usage_dimension_key}"
          type: string
        metricKind:
          type: string
        name:
          description: 'Name: The resource name of the metric descriptor, in format of
            "{service_name}/{plan_key}_{usage_dimension_key}"'
          type: string
        reportingUnit:
          type: string
        unit:
          type: string
        valueType:
          type: string
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - BOOL
            - INT64
            - DOUBLE
            - STRING
            - DISTRIBUTION
            - MONEY
    shared.GcpCommerceProducerPurchaseSpec:
      type: object
      properties:
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/shared.GcpCommerceProducerPurchaseMetric"
        purchaseOptionSpecs:
          type: array
          items:
            $ref: "#/components/schemas/shared.GcpPurchasePlan"
    shared.GcpCommerceProducerServiceBilling:
      type: object
      properties:
        metrics:
          description: in format of
            ["{product-name}.endpoints.{provider-id}.cloud.goog/{plan_key}_{usage_dimension_key}"]
          type: array
          items:
            type: string
    shared.GcpCommerceProducerServiceConfig:
      type: object
      properties:
        billing:
          $ref: "#/components/schemas/shared.GcpCommerceProducerServiceBilling"
        metrics:
          description: "Metrics: Defines the metrics used by this service."
          type: array
          items:
            $ref: "#/components/schemas/shared.GcpCommerceProducerPurchaseMetric"
        name:
          description: In format of "{product-name}.endpoints.{provider-id}.cloud.goog"
          type: string
        producerProjectId:
          type: string
        title:
          description: The Product title
          type: string
    shared.GcpCommerceProducerSupportSpec:
      type: object
      properties:
        description:
          type: string
        email:
          type: string
        uri:
          type: string
    shared.GcpIntegration:
      type: object
      properties:
        gcpProjectId:
          type: string
        gcpProjectNumber:
          type: string
        identityProviderId:
          type: string
        partnerId:
          description: The GCP Marketplace Partner ID, it is also called as Provider ID
            somewhere.
          type: string
        pubsubTopic:
          description: The resource name of the Pub/Sub topic to receive notifications from
            Google when a user signs up for your service, purchases a plan, or
            changes an existing plan.
          type: string
        reportBucket:
          description: The GCP storage bucket name to store the GCP Marketplace reports.
          type: string
        reportFullSyncDone:
          description: Is GCP Marketplace Report full-sync done.
          type: boolean
        reportStartDate:
          description: The UTC date when GCP Marketplace reprots start to generate.
          type: string
          format: date-time
        serviceAccountEmail:
          type: string
        serviceNames:
          description: The array of service resource names of the listings in GCP
            Marketplace.
          type: array
          items:
            type: string
        workloadIdentityPoolId:
          type: string
    shared.GcpMarketplaceConsumer:
      type: object
      properties:
        project:
          description: The project name with format `projects/`.
          type: string
    shared.GcpMarketplaceEntitlement:
      type: object
      properties:
        account:
          description: The resource name of the account that this entitlement is based on,
            if any, in format ""providers/{provider_id}/accounts/{account_id}"
          type: string
        consumers:
          description: The resources using this entitlement, if applicable.
          type: array
          items:
            $ref: "#/components/schemas/shared.GcpMarketplaceConsumer"
        createTime:
          type: string
        id:
          description: Entitlement Id generated by GCP Marketplace. For Marketplace pub/sub
            event.
          type: string
        inputProperties:
          description: The custom properties that were collected from the user to create
            this entitlement.
          type: array
          items:
            type: integer
        messageToUser:
          description: >-
            Provider-supplied message that is displayed to the end user.
            Currently this is used to communicate progress and ETA for

            provisioning. This field can be updated only when a user is waiting for an action from the provider, i.e. entitlement state is

            EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED or EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL. This field is cleared automatically when the entitlement state changes.
          type: string
        name:
          description: The resource name of the entitlement. Entitlement names have the
            form `providers/{provider_id}/entitlements/{entitlement_id}`.
          type: string
        newOfferDuration:
          description: in ISO 8601 duration format, such as "P2Y3M". For Marketplace
            pub/sub event.
          type: string
        newOfferEndTime:
          description: >-
            Output only. The end time of the new offer. Field is empty if the
            pending plan change is not moving to an offer.

            If the offer was created with a term instead of a specified end date, this field is empty.
          type: string
        newPendingOffer:
          description: >-
            The name of the offer the entitlement is switching to upon a pending
            plan change. Only exists if the

            pending plan change is moving to an offer. Format:

            'projects/{project}/services/{service}/privateOffers/{offer-id}' OR

            'projects/{project}/services/{service}/standardOffers/{offer-id}',

            depending on whether the offer is private or public.
          type: string
        newPendingOfferDuration:
          description: >-
            The offer duration of the new offer in ISO 8601 duration format.
            Field is empty if the pending plan

            change is not moving to an offer since the entitlement is not pending, only the plan change is pending.
          type: string
        newPendingPlan:
          description: The identifier of the pending new plan. Required if the product has
            plans and the entitlement has a pending plan change.
          type: string
        newPlan:
          description: When the buyer changes plan, For Marketplace pub/sub event.
          type: string
        offer:
          description: >-
            The name of the offer that was procured. Field is empty if order was
            not made using an offer. Format:

            'projects/{project}/services/{service}/privateOffers/{offer-id}' OR 'projects/{project}/services/{service}/standardOffers/{offer-id}',

            depending on whether the offer is private or public.
          type: string
        offerDuration:
          description: The offer duration of the current offer in ISO 8601 duration format.
            Field is empty if entitlement was not made using an offer.
          type: string
        offerEndTime:
          description: Output only. End time for the Offer association corresponding to
            this entitlement. The field is only populated if the entitlement is
            currently associated with an Offer.
          type: string
        plan:
          description: The identifier of the plan that was procured. Required if the
            product has plans.
          type: string
        product:
          description: The identifier of the entity that was purchased. This may actually
            represent a product, quote, or offer.
          type: string
        productExternalName:
          description: The identifier of the product that was procured.
          type: string
        provider:
          description: The ID of the service provider under Cloud Commerce platform that
            this entitlement was created against.
          type: string
        quoteExternalName:
          description: The identifier of the quote that was used to procure. Empty if the
            order is not purchased using a quote.
          type: string
        state:
          description: Enums of the Entitlement State.
            https://cloud.google.com/marketplace/docs/partners/commerce-procurement-api/reference/rest/v1/providers.entitlements#EntitlementState
          type: string
          enum:
            - ENTITLEMENT_STATE_UNSPECIFIED
            - ENTITLEMENT_ACTIVATION_REQUESTED
            - ENTITLEMENT_ACTIVE
            - ENTITLEMENT_PENDING_CANCELLATION
            - ENTITLEMENT_CANCELLED
            - ENTITLEMENT_PENDING_PLAN_CHANGE
            - ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL
            - ENTITLEMENT_SUSPENDED
        subscriptionEndTime:
          description: The End time for the subscription corresponding to this entitlement.
          type: string
        updateTime:
          description: The last update timestamp. It is the endTime for the cancelled
            entitlement.
          type: string
        usageReportingId:
          description: >-
            The consumerId to use when reporting usage through the Service
            Control API. See the consumerId field at

            Reporting Metrics (https://cloud.google.com/service-control/reporting-metrics) for more details.

            This field is present only if the product has usage-based billing configured.
          type: string
    shared.GcpMarketplaceUserAccount:
      type: object
      properties:
        approvals:
          description: The approvals for this account, that are permitted or have been
            completed.
          type: array
          items:
            $ref: "#/components/schemas/shared.GcpMarketplaceUserAccountApproval"
        createTime:
          type: string
          format: date-time
        id:
          description: GCP Marketplace User Account ID.
          type: string
        inputProperties:
          description: RFC3339 UTC timestamp
          type: array
          items:
            type: integer
        name:
          description: The resource name of the account. Account names have the form
            providers/{provider_id}/accounts/{account_id}.
          type: string
        provider:
          description: The identifier of the service provider (SaaS Seller) that this
            account was created against.
          type: string
        state:
          description: The state of the account. An account might not be able to make a
            purchase if the billing account is suspended, for example.
          type: string
          enum:
            - ACCOUNT_STATE_UNSPECIFIED
            - ACCOUNT_ACTIVE
        updateTime:
          description: RFC3339 UTC timestamp
          type: string
          format: date-time
        userInfo:
          $ref: "#/components/schemas/shared.GcpUserInfo"
    shared.GcpMarketplaceUserAccountApproval:
      type: object
      properties:
        name:
          type: string
        reason:
          description: An explanation for the state of the approval.
          type: string
        state:
          type: string
        updateTime:
          description: RFC3339 UTC timestamp
          type: string
    shared.GcpProduct:
      type: object
      properties:
        createTime:
          type: string
          format: date-time
        id:
          description: Nullable, GCP Marketplace Product UUID
          type: string
        listingSpec:
          $ref: "#/components/schemas/shared.GcpCommerceProducerListingSpec"
        marketplace:
          type: string
          enum:
            - marketplaces/google-cloud
        name:
          description: In format of
            "projects/{project-number}/listings/{product-name}.endpoints.{provider-id}.cloud.goog"
          type: string
        service:
          description: In format of
            "services/{product-name}.endpoints.{provider-id}.cloud.goog"
          type: string
        serviceConfig:
          $ref: "#/components/schemas/shared.GcpCommerceProducerServiceConfig"
    shared.GcpPurchasePlan:
      type: object
      properties:
        name:
          description: The Plan key.
          type: string
        priceInfo:
          $ref: "#/components/schemas/shared.GcpCommerceProducerPriceInfo"
        purchaseMode:
          type: string
          enum:
            - PURCHASE_MODE_PUBLIC
        title:
          description: The Plan title
          type: string
    shared.GcpUserInfo:
      type: object
      properties:
        roles:
          description: "An array of strings representing the user's roles. Right now, it
            can be either: ** account_admin, which indicates that the user is a
            Billing Account Administrator of the billing account that purchased
            the product, or ** project_editor, which indicates that the user is
            a Project Editor, but not a Billing Administrator, of the project
            under that billing account."
          type: array
          items:
            type: string
        user_identity:
          description: The user's obfuscated GAIA ID, which can be used to initiate Open ID
            Connect.
          type: string
    shared.GetApiClientAccessTokenParams:
      type: object
      required:
        - id
        - organizationID
        - secret
      properties:
        id:
          type: string
        organizationID:
          type: string
        secret:
          type: string
    shared.GetRevenueReportParams:
      type: object
      required:
        - organizationID
        - partner
        - reportType
        - service
      properties:
        buyerID:
          description: Optional, if available, return the report for the Buyer.
          type: string
        entitlementID:
          description: Optional, if available, return the report for the Entitlement.
          type: string
        organizationID:
          description: Required. If the productID & entitlementID are emtpy, return the
            report for the entire Organization.
          type: string
        partner:
          description: Required.
          type: string
          enum:
            - AWS
            - AZURE
            - GCP
        productID:
          description: Optional, if available, return the report for the Product.
          type: string
        reportType:
          type: string
          enum:
            - InvoicedAmount
            - CollectableAmount
            - DisbursedAmount
        service:
          description: Required.
          type: string
          enum:
            - MARKETPLACE
    shared.GetUsageReportParams:
      type: object
      required:
        - entitlementID
        - organizationID
      properties:
        entitlementID:
          type: string
        organizationID:
          type: string
    shared.IdentityBuyer:
      type: object
      properties:
        creationTime:
          type: string
          format: date-time
        description:
          type: string
        externalID:
          type: string
        id:
          type: string
        info:
          $ref: "#/components/schemas/shared.BuyerInfo"
        lastUpdateTime:
          type: string
          format: date-time
        name:
          type: string
        organizationID:
          type: string
        partner:
          type: string
          enum:
            - AWS
            - AZURE
            - GCP
    shared.IdentityIntegration:
      type: object
      properties:
        createdBy:
          type: string
        creationTime:
          type: string
          format: date-time
        info:
          $ref: "#/components/schemas/shared.IntegrationInfo"
        lastUpdateTime:
          type: string
          format: date-time
        lastUpdatedBy:
          type: string
        organizationID:
          type: string
        partner:
          type: string
          enum:
            - AWS
            - AZURE
            - GCP
        service:
          type: string
          enum:
            - MARKETPLACE
        status:
          type: string
          enum:
            - CREATED
            - VERIFIED
            - NOT_VERIFIED
    shared.IntegrationInfo:
      type: object
      properties:
        awsIntegration:
          $ref: "#/components/schemas/shared.AwsIntegration"
        azureIntegration:
          $ref: "#/components/schemas/shared.AzureIntegration"
        gcpIntegration:
          $ref: "#/components/schemas/shared.GcpIntegration"
    shared.ListUsageRecordGroupsResponse:
      type: object
      properties:
        nextOffset:
          type: integer
        usageRecordGroups:
          type: array
          items:
            $ref: "#/components/schemas/shared.MeteringUsageRecordGroup"
    shared.ListUsageRecordReportsResponse:
      type: object
      properties:
        usageRecordReports:
          type: array
          items:
            $ref: "#/components/schemas/shared.MeteringUsageRecordReport"
    shared.MeteringDimension:
      description: The dimension to meter usage in entitlement.
      type: object
      properties:
        category:
          type: string
        description:
          type: string
        includedBaseQuantities:
          description: how many quantities of this dimension are included in the commit.
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.IncludedBaseQuantity"
        key:
          type: string
        name:
          description: Display name of the dimension
          type: string
        rate:
          type: number
        types:
          type: array
          items:
            type: string
        usageCount:
          $ref: "#/components/schemas/shared.UsageCount"
        valueType:
          type: string
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - BOOL
            - INT64
            - DOUBLE
            - STRING
            - DISTRIBUTION
            - MONEY
    shared.MeteringUsageRecordGroup:
      type: object
      properties:
        creationTime:
          type: string
          format: date-time
        entitlementID:
          type: string
        id:
          type: string
        lastUpdateTime:
          type: string
          format: date-time
        organizationID:
          type: string
        records:
          type: object
          additionalProperties:
            type: number
        serialID:
          type: integer
        status:
          type: string
        usageRecordReportID:
          type: string
    shared.MeteringUsageRecordReport:
      type: object
      properties:
        creationTime:
          type: string
          format: date-time
        entitlementID:
          type: string
        entitlementTermID:
          type: string
        id:
          type: string
        info:
          $ref: "#/components/schemas/shared.MeteringUsageRecordReportInfo"
        organizationID:
          type: string
        productID:
          type: string
    shared.MeteringUsageRecordReportInfo:
      type: object
      properties:
        awsMeteringResponse:
          $ref: "#/components/schemas/marketplacemetering.BatchMeterUsageOutput"
        azureMeteringResponse:
          $ref: "#/components/schemas/marketplacemeteringv1.BatchUsageEventOkRespon\
            se"
        commitAmount:
          description: The amount of the commit if applicable.
          type: number
        creditAmount:
          description: The amount of the credit if applicable.
          type: number
        creditRecords:
          description: The credit usage records in the map of 
          type: object
          additionalProperties:
            type: number
        dimensionUnitPrice:
          description: The unit price of each dimension in the map of 
          type: object
          additionalProperties:
            type: number
        endTime:
          description: time in UTC when the UsageRecordReport ends
          type: string
          format: date-time
        gcpMeteringResponse:
          $ref: "#/components/schemas/servicecontrol.ReportResponse"
        includedRecords:
          description: The included usage records in the map of 
          type: object
          additionalProperties:
            type: number
        reportedRecords:
          description: The reported usage records in the map of 
          type: object
          additionalProperties:
            type: number
        startTime:
          description: time in UTC when the UsageRecordReport starts
          type: string
          format: date-time
        usageRecordGroupIds:
          description: The IDs of UsageRecordGroups aggregated in this UsageRecordReport.
          type: array
          items:
            type: string
        usedCommitAmount:
          description: The amount of the used commit before the this usage record report if
            applicable.
          type: number
        usedCommitAmountIncrement:
          description: The amount of the used commit increment in this usage record report
            if applicable.
          type: number
        usedCreditAmount:
          description: The amount of the used credit before the this usage record report if
            applicable.
          type: number
        usedCreditAmountIncrement:
          description: The amount of the used credit increment in this usage record report
            if applicable.
          type: number
    shared.OfferInfo:
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: string
        azureProductVariant:
          $ref: "#/components/schemas/partnercentersubmission.AzureProductVariant"
        baseAgreementId:
          description: Applicable for AWS Marketplace only, when the IsAgreementBasedOffer
            is true.
          type: string
        buyerAwsAccountIds:
          description: The buyers' AWS Account IDs of this offer.
          type: array
          items:
            type: string
        buyerAzureTenants:
          description: The buyers' Azure tenants of this offer.
          type: array
          items:
            $ref: "#/components/schemas/partnercentersubmission.AzureAudience"
        commits:
          type: array
          items:
            $ref: "#/components/schemas/shared.CommitDimension"
        currency:
          type: string
        dimensions:
          type: array
          items:
            $ref: "#/components/schemas/shared.MeteringDimension"
        discount:
          description: The rate of discount (0 ~ 1.0), such as 0.1 which is 10% off. 0
            which is no discount.
          type: number
        eulaType:
          type: string
          enum:
            - SCMP
            - ECMP
            - CURRENT
            - CUSTOM
        eulaUrl:
          type: string
        gcpMetrics:
          description: Only applicable for GCP Marketplace Offers (the default or private
            offer)
          type: array
          items:
            $ref: "#/components/schemas/shared.GcpCommerceProducerPurchaseMetric"
        gcpPlans:
          description: Only applicable for GCP Marketplace Offers (the default or private
            offer).
          type: array
          items:
            $ref: "#/components/schemas/shared.GcpPurchasePlan"
        isAgreementBasedOffer:
          description: Applicable for AWS Marketplace only, If this offer is agreement
            based offer.
          type: boolean
        paymentInstallments:
          description: For flexible payment schedule. Not empty if it is enabled.
          type: array
          items:
            $ref: "#/components/schemas/shared.PaymentInstallment"
        refundCancelationPolicy:
          type: string
        sellerNotes:
          type: string
        visibility:
          description: The default visibility of offer is PRIVATE.
          type: string
          enum:
            - PRIVATE
            - PUBLIC
    shared.Operation:
      type: object
      properties:
        endTime:
          type: string
          format: date-time
        id:
          description: Operation ID.
          type: string
        message:
          type: string
        name:
          type: string
        startTime:
          type: string
          format: date-time
        status:
          type: string
        type:
          type: string
    shared.PaymentInstallment:
      type: object
      properties:
        amount:
          type: number
        chargeOn:
          type: string
          format: date-time
    shared.ProductInfo:
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: string
        awsSaasProduct:
          $ref: "#/components/schemas/shared.AwsSaasProduct"
        awsSnsSubscriptions:
          type: array
          items:
            $ref: "#/components/schemas/shared.AwsSnsSubscription"
        azureProduct:
          $ref: "#/components/schemas/partnercentersubmission.AzureProduct"
        commits:
          type: array
          items:
            $ref: "#/components/schemas/shared.CommitDimension"
        currency:
          type: string
        dimensions:
          type: array
          items:
            $ref: "#/components/schemas/shared.MeteringDimension"
        eulaUrl:
          type: string
        gcpProduct:
          $ref: "#/components/schemas/shared.GcpProduct"
        refundCancelationPolicy:
          type: string
        sellerNotes:
          type: string
    shared.RevenueRecord:
      type: object
      properties:
        amount:
          type: number
        date:
          type: string
          format: date-time
    shared.RevenueReport:
      type: object
      properties:
        buyerID:
          type: string
        entitlementID:
          type: string
        organizationID:
          type: string
        partner:
          type: string
        productID:
          type: string
        reportDate:
          type: string
          format: date-time
        reportType:
          type: string
          enum:
            - InvoicedAmount
            - CollectableAmount
            - DisbursedAmount
        revenueRecords:
          type: array
          items:
            $ref: "#/components/schemas/shared.RevenueRecord"
        service:
          type: string
    shared.UpdateIntegrationParams:
      type: object
      required:
        - info
        - organizationID
        - partner
        - service
      properties:
        info:
          $ref: "#/components/schemas/shared.IntegrationInfo"
        organizationID:
          type: string
        partner:
          type: string
          enum:
            - AWS
            - AZURE
            - GCP
        service:
          type: string
          enum:
            - MARKETPLACE
    shared.UpdateProductParams:
      type: object
      required:
        - fulfillmentUrl
        - id
        - organizationID
      properties:
        fulfillmentUrl:
          type: string
        id:
          type: string
        organizationID:
          type: string
    shared.UsageCount:
      type: object
      properties:
        creditCount:
          description: The count of this dimension usage records that are handled as credit.
          type: number
        includedCount:
          description: The count of this dimension usage records that are handled as
            included in IncludedBaseQuantity
          type: number
        reportedCount:
          description: The count of this dimension usage records that are reported to cloud
            vendors.
          type: number
    shared.UsageReport:
      type: object
      properties:
        entitlementID:
          type: string
        organizationID:
          type: string
        reportDate:
          type: string
          format: date-time
        usageRecords:
          type: array
          items:
            $ref: "#/components/schemas/shared.EntitlementUsageRecord"
    shared.WorkloadEntitlement:
      type: object
      properties:
        buyerID:
          type: string
        creationTime:
          type: string
          format: date-time
        endTime:
          description: nullable
          type: string
          format: date-time
        entitlementTermID:
          type: string
        externalBuyerID:
          type: string
        externalID:
          type: string
        externalProductID:
          type: string
        id:
          type: string
        info:
          $ref: "#/components/schemas/shared.EntitlementInfo"
        lastUpdateTime:
          type: string
          format: date-time
        name:
          type: string
        offerID:
          type: string
        organizationID:
          type: string
        partner:
          type: string
          enum:
            - AWS
            - AZURE
            - GCP
        productID:
          type: string
        service:
          type: string
          enum:
            - MARKETPLACE
        startTime:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - ACTIVE
            - CANCELLED
            - SUSPENDED
            - PENDING_START
            - UNKNOWN
        type:
          type: string
    shared.WorkloadEntitlementTerm:
      type: object
      properties:
        buyerID:
          type: string
        commitAmount:
          type: number
        creditAmount:
          type: number
        endTime:
          description: nullable
          type: string
          format: date-time
        entitlementID:
          type: string
        entitlementInfo:
          $ref: "#/components/schemas/shared.EntitlementInfo"
        externalEntitlementID:
          type: string
        id:
          type: string
        info:
          $ref: "#/components/schemas/shared.EntitlementTermInfo"
        offerID:
          type: string
        organizationID:
          type: string
        partner:
          type: string
          enum:
            - AWS
            - AZURE
            - GCP
        productID:
          type: string
        service:
          type: string
          enum:
            - MARKETPLACE
        startTime:
          type: string
          format: date-time
        usedCommitAmount:
          type: number
        usedCreditAmount:
          type: number
    shared.WorkloadOffer:
      type: object
      properties:
        createdBy:
          type: string
        creationTime:
          type: string
          format: date-time
        endTime:
          description: nullable
          type: string
          format: date-time
        expireTime:
          description: nullable
          type: string
          format: date-time
        externalID:
          type: string
        id:
          type: string
        info:
          $ref: "#/components/schemas/shared.OfferInfo"
        lastUpdateTime:
          type: string
          format: date-time
        lastUpdatedBy:
          type: string
        name:
          type: string
        offerType:
          type: string
        organizationID:
          type: string
        partner:
          type: string
          enum:
            - AWS
            - AZURE
            - GCP
        productID:
          type: string
        service:
          type: string
          enum:
            - MARKETPLACE
        status:
          type: string
          enum:
            - CREATE_PENDING
            - CREATE_FAILED
            - CREATE_SUCCESS
            - ACCEPTED
            - EXPIRED
            - ACTIVE
            - UNKNOWN
    shared.WorkloadProduct:
      type: object
      properties:
        createdBy:
          type: string
        creationTime:
          type: string
          format: date-time
        externalID:
          type: string
        fulfillmentUrl:
          type: string
        id:
          type: string
        info:
          $ref: "#/components/schemas/shared.ProductInfo"
        lastUpdateTime:
          type: string
          format: date-time
        lastUpdatedBy:
          type: string
        name:
          type: string
        organizationID:
          type: string
        partner:
          type: string
          enum:
            - AWS
            - AZURE
            - GCP
        productType:
          type: string
        service:
          type: string
          enum:
            - MARKETPLACE
        status:
          type: string
    types.Entitlement:
      type: object
      properties:
        customerIdentifier:
          description: >-
            The customer identifier is a handle to each unique customer in an
            application.

            Customer identifiers are obtained through the ResolveCustomer operation in AWS

            Marketplace Metering Service.
          type: string
        dimension:
          description: >-
            The dimension for which the given entitlement applies. Dimensions
            represent

            categories of capacity in a product and are specified when the product is listed

            in AWS Marketplace.
          type: string
        expirationDate:
          description: >-
            The expiration date represents the minimum date through which this
            entitlement

            is expected to remain valid. For contractual products listed on AWS Marketplace,

            the expiration date is the date at which the customer will renew or cancel their

            contract. Customers who are opting to renew their contract will still have

            entitlements with an expiration date.
          type: string
        productCode:
          description: >-
            The product code for which the given entitlement applies. Product
            codes are

            provided by AWS Marketplace when the product listing is created.
          type: string
        value:
          description: >-
            The EntitlementValue represents the amount of capacity that the
            customer is

            entitled to for the product.
    types.Tag:
      type: object
      properties:
        key:
          description: >-
            One part of a key-value pair that makes up a tag. A key is a label
            that acts

            like a category for the specific tag values.


            This member is required.
          type: string
        value:
          description: >-
            One part of a key-value pair that makes up a tag. A value acts as a
            descriptor

            within a tag category (key). The value can be empty or null.


            This member is required.
          type: string
    types.UsageAllocation:
      type: object
      properties:
        allocatedUsageQuantity:
          description: |-
            The total quantity allocated to this bucket of usage.

            This member is required.
          type: integer
        tags:
          description: >-
            The set of tags that define the bucket of usage. For the bucket of
            items with no

            tags, this parameter can be left out.
          type: array
          items:
            $ref: "#/components/schemas/types.Tag"
    types.UsageRecord:
      type: object
      properties:
        customerIdentifier:
          description: >-
            The CustomerIdentifier is obtained through the ResolveCustomer
            operation and

            represents an individual buyer in your application.


            This member is required.
          type: string
        dimension:
          description: >-
            During the process of registering a product on AWS Marketplace,
            dimensions are

            specified. These represent different units of value in your application.


            This member is required.
          type: string
        quantity:
          description: >-
            The quantity of usage consumed by the customer for the given
            dimension and time.

            Defaults to 0 if not specified.
          type: integer
        timestamp:
          description: >-
            Timestamp, in UTC, for which the usage is being reported. Your
            application can

            meter usage for up to one hour in the past. Make sure the timestamp value is not

            before the start of the software usage.


            This member is required.
          type: string
        usageAllocations:
          description: >-
            The set of UsageAllocations to submit. The sum of all
            UsageAllocation quantities

            must equal the Quantity of the UsageRecord.
          type: array
          items:
            $ref: "#/components/schemas/types.UsageAllocation"
    types.UsageRecordResult:
      type: object
      properties:
        meteringRecordId:
          description: The MeteringRecordId is a unique identifier for this metering event.
          type: string
        status:
          description: >-
            The UsageRecordResultStatus indicates the status of an individual
            UsageRecord

            processed by BatchMeterUsage.


            * Success- The UsageRecord was accepted and

            honored by BatchMeterUsage.


            * CustomerNotSubscribed- The CustomerIdentifier

            specified is not able to use your product. The UsageRecord was not honored.

            There are three causes for this result:


            * The customer identifier is

            invalid.


            * The customer identifier provided in the metering record does not

            have an active agreement or subscription with this product. Future UsageRecords

            for this customer will fail until the customer subscribes to your product.


            *

            The customer's AWS account was suspended.


            * DuplicateRecord- Indicates that the

            UsageRecord was invalid and not honored. A previously metered UsageRecord had

            the same customer, dimension, and time, but a different quantity.
          type: string
        usageRecord:
          $ref: "#/components/schemas/types.UsageRecord"